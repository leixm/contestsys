<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.app.dao.SimsolutionMapper" >
  <resultMap id="BaseResultMap" type="com.code.model.Simsolution" >
    <id column="simsolution_id" property="simsolutionId" jdbcType="INTEGER" />
    <result column="simproblem_id" property="simproblemId" jdbcType="INTEGER" />
    <result column="contest_status_id" property="contestStatusId" jdbcType="INTEGER" />
    <result column="score" property="score" jdbcType="DECIMAL" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.code.model.Simsolution" extends="BaseResultMap" >
    <result column="answer" property="answer" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    simsolution_id, simproblem_id, contest_status_id, score, status
  </sql>
  <sql id="Blob_Column_List" >
    answer
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.code.model.SimsolutionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from simsolution
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.code.model.SimsolutionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from simsolution
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from simsolution
    where simsolution_id = #{simsolutionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from simsolution
    where simsolution_id = #{simsolutionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.code.model.SimsolutionExample" >
    delete from simsolution
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.code.model.Simsolution" >
    insert into simsolution (simsolution_id, simproblem_id, contest_status_id, 
      score, status, answer
      )
    values (#{simsolutionId,jdbcType=INTEGER}, #{simproblemId,jdbcType=INTEGER}, #{contestStatusId,jdbcType=INTEGER}, 
      #{score,jdbcType=DECIMAL}, #{status,jdbcType=INTEGER}, #{answer,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.code.model.Simsolution" >
    insert into simsolution
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="simsolutionId != null" >
        simsolution_id,
      </if>
      <if test="simproblemId != null" >
        simproblem_id,
      </if>
      <if test="contestStatusId != null" >
        contest_status_id,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="answer != null" >
        answer,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="simsolutionId != null" >
        #{simsolutionId,jdbcType=INTEGER},
      </if>
      <if test="simproblemId != null" >
        #{simproblemId,jdbcType=INTEGER},
      </if>
      <if test="contestStatusId != null" >
        #{contestStatusId,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        #{score,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="answer != null" >
        #{answer,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.code.model.SimsolutionExample" resultType="java.lang.Integer" >
    select count(*) from simsolution
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update simsolution
    <set >
      <if test="record.simsolutionId != null" >
        simsolution_id = #{record.simsolutionId,jdbcType=INTEGER},
      </if>
      <if test="record.simproblemId != null" >
        simproblem_id = #{record.simproblemId,jdbcType=INTEGER},
      </if>
      <if test="record.contestStatusId != null" >
        contest_status_id = #{record.contestStatusId,jdbcType=INTEGER},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.answer != null" >
        answer = #{record.answer,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update simsolution
    set simsolution_id = #{record.simsolutionId,jdbcType=INTEGER},
      simproblem_id = #{record.simproblemId,jdbcType=INTEGER},
      contest_status_id = #{record.contestStatusId,jdbcType=INTEGER},
      score = #{record.score,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=INTEGER},
      answer = #{record.answer,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update simsolution
    set simsolution_id = #{record.simsolutionId,jdbcType=INTEGER},
      simproblem_id = #{record.simproblemId,jdbcType=INTEGER},
      contest_status_id = #{record.contestStatusId,jdbcType=INTEGER},
      score = #{record.score,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.code.model.Simsolution" >
    update simsolution
    <set >
      <if test="simproblemId != null" >
        simproblem_id = #{simproblemId,jdbcType=INTEGER},
      </if>
      <if test="contestStatusId != null" >
        contest_status_id = #{contestStatusId,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="answer != null" >
        answer = #{answer,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where simsolution_id = #{simsolutionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.code.model.Simsolution" >
    update simsolution
    set simproblem_id = #{simproblemId,jdbcType=INTEGER},
      contest_status_id = #{contestStatusId,jdbcType=INTEGER},
      score = #{score,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      answer = #{answer,jdbcType=LONGVARCHAR}
    where simsolution_id = #{simsolutionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.code.model.Simsolution" >
    update simsolution
    set simproblem_id = #{simproblemId,jdbcType=INTEGER},
      contest_status_id = #{contestStatusId,jdbcType=INTEGER},
      score = #{score,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER}
    where simsolution_id = #{simsolutionId,jdbcType=INTEGER}
  </update>
</mapper>