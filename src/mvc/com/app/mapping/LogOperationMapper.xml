<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.dao.LogOperationMapper">
  <resultMap id="BaseResultMap" type="com.code.model.LogOperation">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="addTime" jdbcType="VARCHAR" property="addtime" />
    <result column="deleteStatus" jdbcType="VARCHAR" property="deletestatus" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="exception" jdbcType="VARCHAR" property="exception" />
    <result column="remoteAddr" jdbcType="VARCHAR" property="remoteaddr" />
    <result column="requestUri" jdbcType="VARCHAR" property="requesturi" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="userId" jdbcType="VARCHAR" property="userid" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, addTime, deleteStatus, description, exception, remoteAddr, requestUri, title, 
    type, userId, userName
  </sql>
  <select id="selectByExample" parameterType="com.code.model.LogOperationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from log_operation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from log_operation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from log_operation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.code.model.LogOperationExample">
    delete from log_operation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.code.model.LogOperation">
    insert into log_operation (id, addTime, deleteStatus, 
      description, exception, remoteAddr, 
      requestUri, title, type, 
      userId, userName)
    values (#{id,jdbcType=INTEGER}, #{addtime,jdbcType=VARCHAR}, #{deletestatus,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{exception,jdbcType=VARCHAR}, #{remoteaddr,jdbcType=VARCHAR}, 
      #{requesturi,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.code.model.LogOperation">
    insert into log_operation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="addtime != null">
        addTime,
      </if>
      <if test="deletestatus != null">
        deleteStatus,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="exception != null">
        exception,
      </if>
      <if test="remoteaddr != null">
        remoteAddr,
      </if>
      <if test="requesturi != null">
        requestUri,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="username != null">
        userName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="addtime != null">
        #{addtime,jdbcType=VARCHAR},
      </if>
      <if test="deletestatus != null">
        #{deletestatus,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="exception != null">
        #{exception,jdbcType=VARCHAR},
      </if>
      <if test="remoteaddr != null">
        #{remoteaddr,jdbcType=VARCHAR},
      </if>
      <if test="requesturi != null">
        #{requesturi,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.code.model.LogOperationExample" resultType="java.lang.Integer">
    select count(*) from log_operation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update log_operation
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.addtime != null">
        addTime = #{record.addtime,jdbcType=VARCHAR},
      </if>
      <if test="record.deletestatus != null">
        deleteStatus = #{record.deletestatus,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.exception != null">
        exception = #{record.exception,jdbcType=VARCHAR},
      </if>
      <if test="record.remoteaddr != null">
        remoteAddr = #{record.remoteaddr,jdbcType=VARCHAR},
      </if>
      <if test="record.requesturi != null">
        requestUri = #{record.requesturi,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        userName = #{record.username,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update log_operation
    set id = #{record.id,jdbcType=INTEGER},
      addTime = #{record.addtime,jdbcType=VARCHAR},
      deleteStatus = #{record.deletestatus,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      exception = #{record.exception,jdbcType=VARCHAR},
      remoteAddr = #{record.remoteaddr,jdbcType=VARCHAR},
      requestUri = #{record.requesturi,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      userId = #{record.userid,jdbcType=VARCHAR},
      userName = #{record.username,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.code.model.LogOperation">
    update log_operation
    <set>
      <if test="addtime != null">
        addTime = #{addtime,jdbcType=VARCHAR},
      </if>
      <if test="deletestatus != null">
        deleteStatus = #{deletestatus,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="exception != null">
        exception = #{exception,jdbcType=VARCHAR},
      </if>
      <if test="remoteaddr != null">
        remoteAddr = #{remoteaddr,jdbcType=VARCHAR},
      </if>
      <if test="requesturi != null">
        requestUri = #{requesturi,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        userId = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        userName = #{username,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.code.model.LogOperation">
    update log_operation
    set addTime = #{addtime,jdbcType=VARCHAR},
      deleteStatus = #{deletestatus,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      exception = #{exception,jdbcType=VARCHAR},
      remoteAddr = #{remoteaddr,jdbcType=VARCHAR},
      requestUri = #{requesturi,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      userId = #{userid,jdbcType=VARCHAR},
      userName = #{username,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="listAllByDate" resultType="map">
    select * from  log_operation t

    <where>
      <if test="startTime != '' and endTime != ''">
        date_format(addTime,'%Y-%m-%d %h:%i:%s') between  #{startTime} and #{endTime}
      </if>
    </where>

    order by t.type,addTime desc
  </select>

</mapper>