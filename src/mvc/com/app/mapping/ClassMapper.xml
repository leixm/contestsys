<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.app.dao.ClassMapper" >
  <resultMap id="BaseResultMap" type="com.code.model.Class" >
    <id column="class_id" property="classId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    class_id, name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.code.model.ClassExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from class
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from class
    where class_id = #{classId,jdbcType=INTEGER}
  </select>

  <select id="listAllByKeyword" resultType="map" parameterType="java.lang.String">
     select t.class_id classId ,t.name className ,u.fk_teacher_id teacherId, v.realName teacherName from class t
      left join configuration_teacher_class u on t.class_id = u.fk_class_id
      left join user v on u.fk_teacher_id = v.user_id
        <where>
          <if test="teacherId!=null and teacherId!=''">
            and u.fk_teacher_id = #{teacherId}
          </if>

          <if test="className!=null and className!=''">
            and t.name = #{className}
            or v.realName = #{className}
          </if>
        </where>
       order by t.class_id
   </select>
   
  <select id="selClassConfByKeyword" resultType="map" parameterType="java.lang.String">
     select * from configuration_teacher_class u 
     where u.fk_class_id = #{0} and u.fk_teacher_id = #{1}
   </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from class
    where class_id = #{classId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.code.model.ClassExample" >
    delete from class
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <delete id="deleteTeachById"  >
    delete from configuration_teacher_class
    where fk_class_id = #{0} and fk_teacher_id = #{1}
  </delete>
  
  <insert id="insert" parameterType="com.code.model.Class" >
    insert into class (class_id, name
      )
    values (#{classId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.code.model.Class" >
    insert into class
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="classId != null" >
        class_id,
      </if>
      <if test="name != null" >
        name,
      </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="classId != null" >
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <insert id="insertSelectiveToConfiguration" parameterType="com.code.model.Class" >
    insert into configuration_teacher_class
    <trim prefix="(" suffix=")" suffixOverrides="," >
   	 	fk_teacher_id,
      <if test="classId != null" >
        fk_class_id,
      </if>
    </trim>
    
    <trim prefix="values (" suffix=")" suffixOverrides="," >
    	'root',
      <if test="classId != null" >
        #{classId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <insert id="insertTeachByKeyword" parameterType="java.lang.String" >
    insert into configuration_teacher_class (fk_class_id,fk_teacher_id) 
    values (#{0},#{1})
  </insert>
  
  <select id="countByExample" parameterType="com.code.model.ClassExample" resultType="java.lang.Integer" >
    select count(*) from class
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update class
    <set >
      <if test="record.classId != null" >
        class_id = #{record.classId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>

    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update class
    set class_id = #{record.classId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR}

    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.code.model.Class" >
    update class
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>

    </set>
    where class_id = #{classId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.code.model.Class" >
    update class
    set name = #{name,jdbcType=VARCHAR}

    where class_id = #{classId,jdbcType=INTEGER}
  </update>
</mapper>